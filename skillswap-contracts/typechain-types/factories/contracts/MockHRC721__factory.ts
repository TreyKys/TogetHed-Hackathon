/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MockHRC721,
  MockHRC721Interface,
} from "../../contracts/MockHRC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610173806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806323b872dd14610030575b600080fd5b61004a600480360381019061004591906100ea565b61004c565b005b505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061008182610056565b9050919050565b61009181610076565b811461009c57600080fd5b50565b6000813590506100ae81610088565b92915050565b6000819050919050565b6100c7816100b4565b81146100d257600080fd5b50565b6000813590506100e4816100be565b92915050565b60008060006060848603121561010357610102610051565b5b60006101118682870161009f565b93505060206101228682870161009f565b9250506040610133868287016100d5565b915050925092509256fea2646970667358221220e3cf6765651e42ee6ee1187cefa31928f4f2acc176814fac6899a7059907acf864736f6c63430008180033";

type MockHRC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockHRC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockHRC721__factory extends ContractFactory {
  constructor(...args: MockHRC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockHRC721 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockHRC721__factory {
    return super.connect(runner) as MockHRC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockHRC721Interface {
    return new Interface(_abi) as MockHRC721Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockHRC721 {
    return new Contract(address, _abi, runner) as unknown as MockHRC721;
  }
}
