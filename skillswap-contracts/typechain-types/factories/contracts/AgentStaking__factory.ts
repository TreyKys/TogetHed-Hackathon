/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AgentStaking,
  AgentStakingInterface,
} from "../../contracts/AgentStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "stakerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "slashStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakers",
    outputs: [
      {
        internalType: "address",
        name: "stakerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountStaked",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isStaking",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506102d8806100206000396000f3fe60806040526004361061003f5760003560e01c80632def6620146100445780633a4b66f11461005b5780639168ae721461006557806398d1c5a8146100a4575b600080fd5b34801561005057600080fd5b506100596100cd565b005b6100636100cf565b005b34801561007157600080fd5b5061008c6004803603810190610087919061018f565b6100d1565b60405161009b939291906101ff565b60405180910390f35b3480156100b057600080fd5b506100cb60048036038101906100c69190610262565b610128565b005b565b565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900460ff16905083565b5050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061015c82610131565b9050919050565b61016c81610151565b811461017757600080fd5b50565b60008135905061018981610163565b92915050565b6000602082840312156101a5576101a461012c565b5b60006101b38482850161017a565b91505092915050565b6101c581610151565b82525050565b6000819050919050565b6101de816101cb565b82525050565b60008115159050919050565b6101f9816101e4565b82525050565b600060608201905061021460008301866101bc565b61022160208301856101d5565b61022e60408301846101f0565b949350505050565b61023f816101cb565b811461024a57600080fd5b50565b60008135905061025c81610236565b92915050565b600080604083850312156102795761027861012c565b5b60006102878582860161017a565b92505060206102988582860161024d565b915050925092905056fea2646970667358221220175868c3daad959b6d8bf385d5e0b646d9bec4db9c3d11bd0c57a89392bfafec64736f6c63430008180033";

type AgentStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AgentStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AgentStaking__factory extends ContractFactory {
  constructor(...args: AgentStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AgentStaking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AgentStaking__factory {
    return super.connect(runner) as AgentStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AgentStakingInterface {
    return new Interface(_abi) as AgentStakingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AgentStaking {
    return new Contract(address, _abi, runner) as unknown as AgentStaking;
  }
}
