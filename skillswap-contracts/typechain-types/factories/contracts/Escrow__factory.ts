/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Escrow, EscrowInterface } from "../../contracts/Escrow";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_assetTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "AssetListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "EscrowFunded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ListingCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "SaleCompleted",
    type: "event",
  },
  {
    inputs: [],
    name: "assetTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "confirmDelivery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "fundEscrow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "serialNumber",
        type: "uint256",
      },
    ],
    name: "getListingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceInTinybars",
        type: "uint256",
      },
    ],
    name: "listAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listings",
    outputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "enum Escrow.ListingState",
        name: "state",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "refundBuyer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620022be380380620022be8339818101604052810190620000379190620000e8565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b08262000083565b9050919050565b620000c281620000a3565b8114620000ce57600080fd5b50565b600081519050620000e281620000b7565b92915050565b6000602082840312156200010157620001006200007e565b5b60006200011184828501620000d1565b91505092915050565b612194806200012a6000396000f3fe60806040526004361061007b5760003560e01c8063c9c31af51161004e578063c9c31af514610126578063d6077fbf14610142578063de74e57b1461017f578063fd84cb97146101bf5761007b565b8063305a67a81461008057806339292763146100a95780637bad9a3e146100d2578063b6b97225146100fb575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190611428565b6101e8565b005b3480156100b557600080fd5b506100d060048036038101906100cb9190611428565b61038a565b005b3480156100de57600080fd5b506100f960048036038101906100f49190611455565b610601565b005b34801561010757600080fd5b50610110610908565b60405161011d91906114d6565b60405180910390f35b610140600480360381019061013b9190611428565b61092c565b005b34801561014e57600080fd5b5061016960048036038101906101649190611428565b610b54565b6040516101769190611500565b60405180910390f35b34801561018b57600080fd5b506101a660048036038101906101a19190611428565b610b74565b6040516101b69493929190611592565b60405180910390f35b3480156101cb57600080fd5b506101e660048036038101906101e19190611428565b610bf1565b005b60006001600083815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610291576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102889061165a565b60405180910390fd5b600060038111156102a5576102a461151b565b5b8160030160009054906101000a900460ff1660038111156102c9576102c861151b565b5b14610309576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610300906116ec565b60405180910390fd5b60038160030160006101000a81548160ff021916908360038111156103315761033061151b565b5b0217905550817f5d7a33421ffa4bc07eb8929c5ace6393d3aa5ec3775e4e2f442527876b7dbe8860405160405180910390a2610386604051806060016040528060328152602001612046603291393384611051565b5050565b60006001600083815260200190815260200160002090508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610433576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042a906117a4565b60405180910390fd5b600160038111156104475761044661151b565b5b8160030160009054906101000a900460ff16600381111561046b5761046a61151b565b5b146104ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a290611810565b60405180910390fd5b60038160030160006101000a81548160ff021916908360038111156104d3576104d261151b565b5b021790555060008160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826002015460405161052690611861565b60006040518083038185875af1925050503d8060008114610563576040519150601f19603f3d011682016040523d82523d6000602084013e610568565b606091505b50509050806105ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a3906118e8565b60405180910390fd5b827f5d7a33421ffa4bc07eb8929c5ace6393d3aa5ec3775e4e2f442527876b7dbe8860405160405180910390a26105fc6040518060600160405280602a81526020016120cc602a913984336110f0565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016106779190611500565b602060405180830381865afa158015610694573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b89190611934565b73ffffffffffffffffffffffffffffffffffffffff161461070e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610705906119d3565b60405180910390fd5b60008211610751576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074890611a65565b60405180910390fd5b60405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001838152602001600060038111156107af576107ae61151b565b5b8152506001600085815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff021916908360038111156108885761088761151b565b5b02179055509050503373ffffffffffffffffffffffffffffffffffffffff16837f476606c547e15093eee9f27111d27bfb5d4a751983dec28c9100eb7bb39b8db1846040516108d79190611500565b60405180910390a36109036040518060600160405280603081526020016120786030913933858561118f565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008381526020019081526020016000209050600060038111156109575761095661151b565b5b8160030160009054906101000a900460ff16600381111561097b5761097a61151b565b5b146109bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b290611af7565b60405180910390fd5b60006109c634611231565b90506109ea604051806060016040528060248152602001612117602491393461124b565b610a0c60405180606001604052806024815260200161213b602491398261124b565b610a326040518060600160405280602181526020016120f660219139836002015461124b565b81600201548114610a78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6f90611b89565b60405180910390fd5b338260010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018260030160006101000a81548160ff02191690836003811115610ae357610ae261151b565b5b02179055503373ffffffffffffffffffffffffffffffffffffffff16837ff31aa8c1b282e288eee75b61fa1ca7fba12a48dfa18132fc448588738aa0e65760405160405180910390a3610b4f6040518060600160405280602e8152602001612018602e91393385611051565b505050565b600060016000838152602001908152602001600020600201549050919050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16905084565b600060016000838152602001908152602001600020905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb790611c1b565b60405180910390fd5b60016003811115610cd457610cd361151b565b5b8260030160009054906101000a900460ff166003811115610cf857610cf761151b565b5b14610d38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2f90611c87565b60405180910390fd5b60028260030160006101000a81548160ff02191690836003811115610d6057610d5f61151b565b5b02179055506000610d7483600201546112e7565b905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051610dc090611861565b60006040518083038185875af1925050503d8060008114610dfd576040519150601f19603f3d011682016040523d82523d6000602084013e610e02565b606091505b5050905080610e46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3d90611d19565b60405180910390fd5b610ea96040518060400160405280601681526020017f484241522073656e7420746f2073656c6c6572202573000000000000000000008152508560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611301565b8273ffffffffffffffffffffffffffffffffffffffff166342842e0e8560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168660010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16886040518463ffffffff1660e01b8152600401610f2e93929190611d39565b600060405180830381600087803b158015610f4857600080fd5b505af1158015610f5c573d6000803e3d6000fd5b50505050610fa76040518060600160405280602481526020016120a860249139868660010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166110f0565b8360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16867fdb87be53c711a1eb193f5fffddcfd85425990853a8423fa2bfd4a8620c218ed460405160405180910390a45050505050565b6110eb83838360405160240161106993929190611def565b6040516020818303038152906040527f0d26b925000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061139d565b505050565b61118a83838360405160240161110893929190611e2d565b6040516020818303038152906040527f1c7ec448000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061139d565b505050565b61122b848484846040516024016111a99493929190611e6b565b6040516020818303038152906040527ff8f51b1e000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061139d565b50505050565b60006402540be400826112449190611f15565b9050919050565b6112e38282604051602401611261929190611f46565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061139d565b5050565b60006402540be400826112fa9190611f76565b9050919050565b6113998282604051602401611317929190611fb8565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061139d565b5050565b6113b4816113ac6113b76113d8565b63ffffffff16565b50565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6113e3819050919050565b6113eb611fe8565b565b600080fd5b6000819050919050565b611405816113f2565b811461141057600080fd5b50565b600081359050611422816113fc565b92915050565b60006020828403121561143e5761143d6113ed565b5b600061144c84828501611413565b91505092915050565b6000806040838503121561146c5761146b6113ed565b5b600061147a85828601611413565b925050602061148b85828601611413565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114c082611495565b9050919050565b6114d0816114b5565b82525050565b60006020820190506114eb60008301846114c7565b92915050565b6114fa816113f2565b82525050565b600060208201905061151560008301846114f1565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061155b5761155a61151b565b5b50565b600081905061156c8261154a565b919050565b600061157c8261155e565b9050919050565b61158c81611571565b82525050565b60006080820190506115a760008301876114c7565b6115b460208301866114c7565b6115c160408301856114f1565b6115ce6060830184611583565b95945050505050565b600082825260208201905092915050565b7f457363726f773a204f6e6c79207468652073656c6c65722063616e2063616e6360008201527f656c2061206c697374696e672e00000000000000000000000000000000000000602082015250565b6000611644602d836115d7565b915061164f826115e8565b604082019050919050565b6000602082019050818103600083015261167381611637565b9050919050565b7f457363726f773a204c697374696e67206973206e6f7420696e20612063616e6360008201527f656c61626c652073746174652e00000000000000000000000000000000000000602082015250565b60006116d6602d836115d7565b91506116e18261167a565b604082019050919050565b60006020820190508181036000830152611705816116c9565b9050919050565b7f457363726f773a204f6e6c79207468652062757965722063616e20726571756560008201527f7374206120726566756e6420756e64657220737065636966696320636f6e646960208201527f74696f6e732e0000000000000000000000000000000000000000000000000000604082015250565b600061178e6046836115d7565b91506117998261170c565b606082019050919050565b600060208201905081810360008301526117bd81611781565b9050919050565b7f457363726f773a204173736574206973206e6f742066756e6465642e00000000600082015250565b60006117fa601c836115d7565b9150611805826117c4565b602082019050919050565b60006020820190508181036000830152611829816117ed565b9050919050565b600081905092915050565b50565b600061184b600083611830565b91506118568261183b565b600082019050919050565b600061186c8261183e565b9150819050919050565b7f457363726f773a204661696c656420746f20726566756e64204842415220746f60008201527f2062757965722e00000000000000000000000000000000000000000000000000602082015250565b60006118d26027836115d7565b91506118dd82611876565b604082019050919050565b60006020820190508181036000830152611901816118c5565b9050919050565b611911816114b5565b811461191c57600080fd5b50565b60008151905061192e81611908565b92915050565b60006020828403121561194a576119496113ed565b5b60006119588482850161191f565b91505092915050565b7f457363726f773a204f6e6c7920746865206f776e65722063616e206c6973742060008201527f7468652061737365742e00000000000000000000000000000000000000000000602082015250565b60006119bd602a836115d7565b91506119c882611961565b604082019050919050565b600060208201905081810360008301526119ec816119b0565b9050919050565b7f457363726f773a205072696365206d757374206265206772656174657220746860008201527f616e207a65726f2e000000000000000000000000000000000000000000000000602082015250565b6000611a4f6028836115d7565b9150611a5a826119f3565b604082019050919050565b60006020820190508181036000830152611a7e81611a42565b9050919050565b7f457363726f773a204173736574206973206e6f74206c697374656420666f722060008201527f73616c652e000000000000000000000000000000000000000000000000000000602082015250565b6000611ae16025836115d7565b9150611aec82611a85565b604082019050919050565b60006020820190508181036000830152611b1081611ad4565b9050919050565b7f457363726f773a20496e636f7272656374207061796d656e7420616d6f756e7460008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b6000611b736021836115d7565b9150611b7e82611b17565b604082019050919050565b60006020820190508181036000830152611ba281611b66565b9050919050565b7f457363726f773a204f6e6c79207468652062757965722063616e20636f6e666960008201527f726d2064656c69766572792e0000000000000000000000000000000000000000602082015250565b6000611c05602c836115d7565b9150611c1082611ba9565b604082019050919050565b60006020820190508181036000830152611c3481611bf8565b9050919050565b7f457363726f773a20457363726f77206973206e6f742066756e6465642e000000600082015250565b6000611c71601d836115d7565b9150611c7c82611c3b565b602082019050919050565b60006020820190508181036000830152611ca081611c64565b9050919050565b7f457363726f773a204661696c656420746f2073656e64204842415220746f207360008201527f656c6c65722e0000000000000000000000000000000000000000000000000000602082015250565b6000611d036026836115d7565b9150611d0e82611ca7565b604082019050919050565b60006020820190508181036000830152611d3281611cf6565b9050919050565b6000606082019050611d4e60008301866114c7565b611d5b60208301856114c7565b611d6860408301846114f1565b949350505050565b600081519050919050565b60005b83811015611d99578082015181840152602081019050611d7e565b60008484015250505050565b6000601f19601f8301169050919050565b6000611dc182611d70565b611dcb81856115d7565b9350611ddb818560208601611d7b565b611de481611da5565b840191505092915050565b60006060820190508181036000830152611e098186611db6565b9050611e1860208301856114c7565b611e2560408301846114f1565b949350505050565b60006060820190508181036000830152611e478186611db6565b9050611e5660208301856114f1565b611e6360408301846114c7565b949350505050565b60006080820190508181036000830152611e858187611db6565b9050611e9460208301866114c7565b611ea160408301856114f1565b611eae60608301846114f1565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f20826113f2565b9150611f2b836113f2565b925082611f3b57611f3a611eb7565b5b828204905092915050565b60006040820190508181036000830152611f608185611db6565b9050611f6f60208301846114f1565b9392505050565b6000611f81826113f2565b9150611f8c836113f2565b9250828202611f9a816113f2565b91508282048414831517611fb157611fb0611ee6565b5b5092915050565b60006040820190508181036000830152611fd28185611db6565b9050611fe160208301846114c7565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfe4275796572202573206861732066756e6465642074686520657363726f7720666f7220546f6b656e20494420257353656c6c6572202573206861732063616e63656c656420746865206c697374696e6720666f7220546f6b656e20494420257353656c6c657220257320686173206c697374656420546f6b656e20494420257320666f722025732074696e79626172734173736574204e4654202573207472616e7366657272656420746f20627579657220257346756e647320666f7220546f6b656e20494420257320726566756e64656420746f20627579657220257344454255473a204578706563746564207072696365202874696e7962617273293a44454255473a205265636569766564206d73672e76616c7565202877656962617273293a44454255473a20436f6e766572746564207061796d656e74202874696e7962617273293aa2646970667358221220db3971fe5ae9335dea99c6320c62b1923bca246192f0965c519e103590ae46b464736f6c63430008180033";

type EscrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EscrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Escrow__factory extends ContractFactory {
  constructor(...args: EscrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _assetTokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_assetTokenAddress, overrides || {});
  }
  override deploy(
    _assetTokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_assetTokenAddress, overrides || {}) as Promise<
      Escrow & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Escrow__factory {
    return super.connect(runner) as Escrow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EscrowInterface {
    return new Interface(_abi) as EscrowInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Escrow {
    return new Contract(address, _abi, runner) as unknown as Escrow;
  }
}
