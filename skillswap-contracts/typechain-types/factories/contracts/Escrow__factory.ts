/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Escrow, EscrowInterface } from "../../contracts/Escrow";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "assetToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "AssetListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "assetToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "EscrowFunded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "assetToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ListingCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "assetToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "SaleCompleted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "confirmDelivery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "fundEscrow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListingKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceInTinybars",
        type: "uint256",
      },
    ],
    name: "listAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "listings",
    outputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "enum Escrow.ListingState",
        name: "state",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "refundBuyer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611f93806100206000396000f3fe6080604052600436106100705760003560e01c8063b2ddee061161004e578063b2ddee06146100f7578063b6b9ad0314610120578063c18b8db414610149578063c5fca8871461018957610070565b806306f8b189146100755780633d75daa31461009e5780637d1b0a44146100ba575b600080fd5b34801561008157600080fd5b5061009c600480360381019061009791906112d5565b6101b2565b005b6100b860048036038101906100b39190611328565b6105bf565b005b3480156100c657600080fd5b506100e160048036038101906100dc9190611328565b6107be565b6040516100ee9190611381565b60405180910390f35b34801561010357600080fd5b5061011e60048036038101906101199190611328565b6107f1565b005b34801561012c57600080fd5b5061014760048036038101906101429190611328565b6109d4565b005b34801561015557600080fd5b50610170600480360381019061016b91906113c8565b610dea565b604051610180949392919061148a565b60405180910390f35b34801561019557600080fd5b506101b060048036038101906101ab9190611328565b610e67565b005b60008390503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040161020791906114cf565b602060405180830381865afa158015610224573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024891906114ff565b73ffffffffffffffffffffffffffffffffffffffff161461029e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610295906115af565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc856040518263ffffffff1660e01b81526004016102ee91906114cf565b602060405180830381865afa15801561030b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032f91906114ff565b73ffffffffffffffffffffffffffffffffffffffff1614610385576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037c90611641565b60405180910390fd5b600082116103c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf906116d3565b60405180910390fd5b60006103d485856107be565b905060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020018481526020016000600381111561043457610433611413565b5b81525060008083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff0219169083600381111561050c5761050b611413565b5b02179055509050503373ffffffffffffffffffffffffffffffffffffffff16848673ffffffffffffffffffffffffffffffffffffffff167faf06e27273b4227ba370b5fe9e27fd62aff4c7d6d22e5ebfbf83d5fc79cd3ad08660405161057291906114cf565b60405180910390a46105b86040518060400160405280601a81526020017f53656c6c657220686173206c6973746564206120746f6b656e2e00000000000081525061111f565b5050505050565b60006105cb83836107be565b905060008060008381526020019081526020016000209050600060038111156105f7576105f6611413565b5b8160030160009054906101000a900460ff16600381111561061b5761061a611413565b5b1461065b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065290611765565b60405180910390fd5b6000610666346111b8565b9050816002015481146106ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a5906117f7565b60405180910390fd5b338260010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018260030160006101000a81548160ff0219169083600381111561071957610718611413565b5b02179055503373ffffffffffffffffffffffffffffffffffffffff16848673ffffffffffffffffffffffffffffffffffffffff167ffd1cb3e06ec67f05d1020b4dfad39cdb06423270281743cddbe3eeb2c116799660405160405180910390a46107b76040518060400160405280601c81526020017f4275796572206861732066756e6465642074686520657363726f772e0000000081525061111f565b5050505050565b600082826040516020016107d3929190611880565b60405160208183030381529060405280519060200120905092915050565b60006107fd83836107be565b9050600080600083815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089e9061191e565b60405180910390fd5b600060038111156108bb576108ba611413565b5b8160030160009054906101000a900460ff1660038111156108df576108de611413565b5b1461091f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610916906119b0565b60405180910390fd5b60038160030160006101000a81548160ff0219169083600381111561094757610946611413565b5b0217905550828473ffffffffffffffffffffffffffffffffffffffff167f3267ca70878aeda07084f851ec813390240ed2e92e29d57bf4b46f569293d85f60405160405180910390a36109ce6040518060400160405280601c81526020017f53656c6c6572206861732063616e63656c6564206c697374696e672e0000000081525061111f565b50505050565b60006109e083836107be565b90506000806000838152602001908152602001600020905060008490508160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8690611a42565b60405180910390fd5b60016003811115610aa357610aa2611413565b5b8260030160009054906101000a900460ff166003811115610ac757610ac6611413565b5b14610b07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afe90611aae565b60405180910390fd5b60028260030160006101000a81548160ff02191690836003811115610b2f57610b2e611413565b5b02179055506000610b4383600201546111d2565b905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051610b8f90611aff565b60006040518083038185875af1925050503d8060008114610bcc576040519150601f19603f3d011682016040523d82523d6000602084013e610bd1565b606091505b5050905080610c15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0c90611b86565b60405180910390fd5b610c536040518060400160405280601481526020017f484241522073656e7420746f2073656c6c65722e00000000000000000000000081525061111f565b8273ffffffffffffffffffffffffffffffffffffffff166342842e0e8560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168660010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16896040518463ffffffff1660e01b8152600401610cd893929190611ba6565b600060405180830381600087803b158015610cf257600080fd5b505af1158015610d06573d6000803e3d6000fd5b50505050610d486040518060400160405280601f81526020017f4173736574204e4654207472616e7366657272656420746f2062757965722e0081525061111f565b858773ffffffffffffffffffffffffffffffffffffffff167f518a1dc0970937434f83af266e574e243094a34eb5ca32fe17341f2dc0afa6cf8660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168760010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051610dd9929190611bdd565b60405180910390a350505050505050565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16905084565b6000610e7383836107be565b9050600080600083815260200190815260200160002090508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1490611c9e565b60405180910390fd5b60016003811115610f3157610f30611413565b5b8160030160009054906101000a900460ff166003811115610f5557610f54611413565b5b14610f95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8c90611d0a565b60405180910390fd5b60038160030160006101000a81548160ff02191690836003811115610fbd57610fbc611413565b5b021790555060008160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826002015460405161101090611aff565b60006040518083038185875af1925050503d806000811461104d576040519150601f19603f3d011682016040523d82523d6000602084013e611052565b606091505b5050905080611096576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108d90611d9c565b60405180910390fd5b838573ffffffffffffffffffffffffffffffffffffffff167f3267ca70878aeda07084f851ec813390240ed2e92e29d57bf4b46f569293d85f60405160405180910390a36111186040518060400160405280601881526020017f46756e647320726566756e64656420746f2062757965722e000000000000000081525061111f565b5050505050565b6111b5816040516024016111339190611e3b565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506111ec565b50565b60006402540be400826111cb9190611ebb565b9050919050565b60006402540be400826111e59190611eec565b9050919050565b611203816111fb611206611227565b63ffffffff16565b50565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b611232819050919050565b61123a611f2e565b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061126c82611241565b9050919050565b61127c81611261565b811461128757600080fd5b50565b60008135905061129981611273565b92915050565b6000819050919050565b6112b28161129f565b81146112bd57600080fd5b50565b6000813590506112cf816112a9565b92915050565b6000806000606084860312156112ee576112ed61123c565b5b60006112fc8682870161128a565b935050602061130d868287016112c0565b925050604061131e868287016112c0565b9150509250925092565b6000806040838503121561133f5761133e61123c565b5b600061134d8582860161128a565b925050602061135e858286016112c0565b9150509250929050565b6000819050919050565b61137b81611368565b82525050565b60006020820190506113966000830184611372565b92915050565b6113a581611368565b81146113b057600080fd5b50565b6000813590506113c28161139c565b92915050565b6000602082840312156113de576113dd61123c565b5b60006113ec848285016113b3565b91505092915050565b6113fe81611261565b82525050565b61140d8161129f565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061145357611452611413565b5b50565b600081905061146482611442565b919050565b600061147482611456565b9050919050565b61148481611469565b82525050565b600060808201905061149f60008301876113f5565b6114ac60208301866113f5565b6114b96040830185611404565b6114c6606083018461147b565b95945050505050565b60006020820190506114e46000830184611404565b92915050565b6000815190506114f981611273565b92915050565b6000602082840312156115155761151461123c565b5b6000611523848285016114ea565b91505092915050565b600082825260208201905092915050565b7f457363726f773a204f6e6c7920746865206f776e65722063616e206c6973742060008201527f7468652061737365742e00000000000000000000000000000000000000000000602082015250565b6000611599602a8361152c565b91506115a48261153d565b604082019050919050565b600060208201905081810360008301526115c88161158c565b9050919050565b7f457363726f773a20436f6e7472616374206d75737420626520617070726f766560008201527f6420746f207472616e73666572207468652061737365742e0000000000000000602082015250565b600061162b60388361152c565b9150611636826115cf565b604082019050919050565b6000602082019050818103600083015261165a8161161e565b9050919050565b7f457363726f773a205072696365206d757374206265206772656174657220746860008201527f616e207a65726f2e000000000000000000000000000000000000000000000000602082015250565b60006116bd60288361152c565b91506116c882611661565b604082019050919050565b600060208201905081810360008301526116ec816116b0565b9050919050565b7f457363726f773a204173736574206973206e6f74206c697374656420666f722060008201527f73616c652e000000000000000000000000000000000000000000000000000000602082015250565b600061174f60258361152c565b915061175a826116f3565b604082019050919050565b6000602082019050818103600083015261177e81611742565b9050919050565b7f457363726f773a20496e636f7272656374207061796d656e7420616d6f756e7460008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b60006117e160218361152c565b91506117ec82611785565b604082019050919050565b60006020820190508181036000830152611810816117d4565b9050919050565b60008160601b9050919050565b600061182f82611817565b9050919050565b600061184182611824565b9050919050565b61185961185482611261565b611836565b82525050565b6000819050919050565b61187a6118758261129f565b61185f565b82525050565b600061188c8285611848565b60148201915061189c8284611869565b6020820191508190509392505050565b7f457363726f773a204f6e6c79207468652073656c6c65722063616e2063616e6360008201527f656c2061206c697374696e672e00000000000000000000000000000000000000602082015250565b6000611908602d8361152c565b9150611913826118ac565b604082019050919050565b60006020820190508181036000830152611937816118fb565b9050919050565b7f457363726f773a204c697374696e67206973206e6f7420696e20612063616e6360008201527f656c61626c652073746174652e00000000000000000000000000000000000000602082015250565b600061199a602d8361152c565b91506119a58261193e565b604082019050919050565b600060208201905081810360008301526119c98161198d565b9050919050565b7f457363726f773a204f6e6c79207468652062757965722063616e20636f6e666960008201527f726d2064656c69766572792e0000000000000000000000000000000000000000602082015250565b6000611a2c602c8361152c565b9150611a37826119d0565b604082019050919050565b60006020820190508181036000830152611a5b81611a1f565b9050919050565b7f457363726f773a20457363726f77206973206e6f742066756e6465642e000000600082015250565b6000611a98601d8361152c565b9150611aa382611a62565b602082019050919050565b60006020820190508181036000830152611ac781611a8b565b9050919050565b600081905092915050565b50565b6000611ae9600083611ace565b9150611af482611ad9565b600082019050919050565b6000611b0a82611adc565b9150819050919050565b7f457363726f773a204661696c656420746f2073656e64204842415220746f207360008201527f656c6c65722e0000000000000000000000000000000000000000000000000000602082015250565b6000611b7060268361152c565b9150611b7b82611b14565b604082019050919050565b60006020820190508181036000830152611b9f81611b63565b9050919050565b6000606082019050611bbb60008301866113f5565b611bc860208301856113f5565b611bd56040830184611404565b949350505050565b6000604082019050611bf260008301856113f5565b611bff60208301846113f5565b9392505050565b7f457363726f773a204f6e6c79207468652062757965722063616e20726571756560008201527f7374206120726566756e6420756e64657220737065636966696320636f6e646960208201527f74696f6e732e0000000000000000000000000000000000000000000000000000604082015250565b6000611c8860468361152c565b9150611c9382611c06565b606082019050919050565b60006020820190508181036000830152611cb781611c7b565b9050919050565b7f457363726f773a204173736574206973206e6f742066756e6465642e00000000600082015250565b6000611cf4601c8361152c565b9150611cff82611cbe565b602082019050919050565b60006020820190508181036000830152611d2381611ce7565b9050919050565b7f457363726f773a204661696c656420746f20726566756e64204842415220746f60008201527f2062757965722e00000000000000000000000000000000000000000000000000602082015250565b6000611d8660278361152c565b9150611d9182611d2a565b604082019050919050565b60006020820190508181036000830152611db581611d79565b9050919050565b600081519050919050565b60005b83811015611de5578082015181840152602081019050611dca565b60008484015250505050565b6000601f19601f8301169050919050565b6000611e0d82611dbc565b611e17818561152c565b9350611e27818560208601611dc7565b611e3081611df1565b840191505092915050565b60006020820190508181036000830152611e558184611e02565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ec68261129f565b9150611ed18361129f565b925082611ee157611ee0611e5d565b5b828204905092915050565b6000611ef78261129f565b9150611f028361129f565b9250828202611f108161129f565b91508282048414831517611f2757611f26611e8c565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfea26469706673582212204e6d371f1a44575db9bb11eb5151b04673f23eb54a23e185f20aa59a0180b1b864736f6c63430008180033";

type EscrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EscrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Escrow__factory extends ContractFactory {
  constructor(...args: EscrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Escrow & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Escrow__factory {
    return super.connect(runner) as Escrow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EscrowInterface {
    return new Interface(_abi) as EscrowInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Escrow {
    return new Contract(address, _abi, runner) as unknown as Escrow;
  }
}
