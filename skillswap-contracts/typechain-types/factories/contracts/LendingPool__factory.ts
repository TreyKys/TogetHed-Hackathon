/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  LendingPool,
  LendingPoolInterface,
} from "../../contracts/LendingPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_assetTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LiquidityDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LiquidityWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "LoanLiquidated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LoanRepaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "principal",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "interest",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dueTime",
        type: "uint256",
      },
    ],
    name: "LoanTaken",
    type: "event",
  },
  {
    inputs: [],
    name: "assetTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositLiquidity",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getLoan",
    outputs: [
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "principal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dueTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tid",
        type: "uint256",
      },
      {
        internalType: "enum LendingPool.LoanState",
        name: "state",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "liquidateLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "loans",
    outputs: [
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "principal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dueTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "enum LendingPool.LoanState",
        name: "state",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "repayLoan",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "principal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "durationSeconds",
        type: "uint256",
      },
    ],
    name: "takeLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001cf538038062001cf5833981810160405281019062000037919062000129565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f182620000c4565b9050919050565b6200010381620000e4565b81146200010f57600080fd5b50565b6000815190506200012381620000f8565b92915050565b600060208284031215620001425762000141620000bf565b5b6000620001528482850162000112565b91505092915050565b611b8a806200016b6000396000f3fe6080604052600436106100955760003560e01c8063a0b81fbe11610059578063a0b81fbe146101f2578063ab7b1c891461021b578063b6b9722514610237578063ca593c5914610262578063e1ec3c681461026c57610103565b80630a861f2a146101085780631a68650214610131578063504006ca1461015c57806379b2e89f1461019e5780638da5cb5b146101c757610103565b366101035734600260008282546100ac9190611138565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f7ff07ce9a287649537e4b012e45cf012d90228b12e2b56bb03515a6b5436fcdf346040516100f9919061117b565b60405180910390a2005b600080fd5b34801561011457600080fd5b5061012f600480360381019061012a91906111c7565b6102ae565b005b34801561013d57600080fd5b506101466104de565b604051610153919061117b565b60405180910390f35b34801561016857600080fd5b50610183600480360381019061017e91906111c7565b6104e4565b604051610195969594939291906112ac565b60405180910390f35b3480156101aa57600080fd5b506101c560048036038101906101c09190611339565b6105fc565b005b3480156101d357600080fd5b506101dc610878565b6040516101e99190611379565b60405180910390f35b3480156101fe57600080fd5b5061021960048036038101906102149190611394565b61089e565b005b610235600480360381019061023091906111c7565b610cd3565b005b34801561024357600080fd5b5061024c610fc6565b6040516102599190611379565b60405180910390f35b61026a610fea565b005b34801561027857600080fd5b50610293600480360381019061028e91906111c7565b611096565b6040516102a5969594939291906112ac565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033590611458565b60405180910390fd5b600254811115610383576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037a906114ea565b60405180910390fd5b8060026000828254610395919061150a565b925050819055506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516103e49061156f565b60006040518083038185875af1925050503d8060008114610421576040519150601f19603f3d011682016040523d82523d6000602084013e610426565b606091505b505090508061046a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610461906115d0565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fb1cce8684b4ffa8667b4577654e61ee3480d661ee9c27522ac80e211f6bd4d25836040516104d2919061117b565b60405180910390a25050565b60025481565b6000806000806000806000600360008981526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1660038111156105b0576105af611235565b5b60038111156105c2576105c1611235565b5b815250509050806000015181602001518260400151836060015184608001518560a001519650965096509650965096505091939550919395565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611458565b60405180910390fd5b6000600360008481526020019081526020016000209050600160038111156106b7576106b6611235565b5b8160050160009054906101000a900460ff1660038111156106db576106da611235565b5b1461071b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107129061163c565b60405180910390fd5b80600301544211610761576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610758906116a8565b60405180910390fd5b60038160050160006101000a81548160ff0219169083600381111561078957610788611235565b5b021790555060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166342842e0e3085876040518463ffffffff1660e01b81526004016107f1939291906116c8565b600060405180830381600087803b15801561080b57600080fd5b505af115801561081f573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff16847fe5f5c05d6b32123f44e7d6e37447486a3c31c7a0236b1768a7ca7efcd6d32f198560405161086a9190611379565b60405180910390a350505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060038111156108b2576108b1611235565b5b6003600086815260200190815260200160002060050160009054906101000a900460ff1660038111156108e8576108e7611235565b5b14610928576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091f90611771565b60405180910390fd5b6000831161096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906117dd565b60405180910390fd5b60008111801561097e575062278d008111155b6109bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b490611849565b60405180910390fd5b600254831115610a02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f9906118db565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166342842e0e3330886040518463ffffffff1660e01b8152600401610a65939291906116c8565b600060405180830381600087803b158015610a7f57600080fd5b505af1158015610a93573d6000803e3d6000fd5b505050508360026000828254610aa9919061150a565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff1685604051610ad69061156f565b60006040518083038185875af1925050503d8060008114610b13576040519150601f19603f3d011682016040523d82523d6000602084013e610b18565b606091505b5050905080610b5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b539061196d565b60405180910390fd5b60008342610b6a9190611138565b90506040518060c001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200182815260200188815260200160016003811115610bbf57610bbe611235565b5b8152506003600089815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690836003811115610c6f57610c6e611235565b5b02179055509050503373ffffffffffffffffffffffffffffffffffffffff16877f13f8108d36206b46910d1f1766e9c9c2f8899761371d4c98fb2b710cb8a68475888885604051610cc29392919061198d565b60405180910390a350505050505050565b600060036000838152602001908152602001600020905060016003811115610cfe57610cfd611235565b5b8160050160009054906101000a900460ff166003811115610d2257610d21611235565b5b14610d62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d599061163c565b60405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610df4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610deb90611a36565b60405180910390fd5b600081600201548260010154610e0a9190611138565b9050803414610e4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4590611ac8565b60405180910390fd5b60028260050160006101000a81548160ff02191690836003811115610e7657610e75611235565b5b021790555060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166342842e0e308560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16876040518463ffffffff1660e01b8152600401610f02939291906116c8565b600060405180830381600087803b158015610f1c57600080fd5b505af1158015610f30573d6000803e3d6000fd5b505050503460026000828254610f469190611138565b925050819055508260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16847f512d3e65b3e58c2187bb1872aa435dba5bd09c1c03823ba56ab70aac411e4a2134604051610fb8919061117b565b60405180910390a350505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000341161102d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102490611b34565b60405180910390fd5b346002600082825461103f9190611138565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f7ff07ce9a287649537e4b012e45cf012d90228b12e2b56bb03515a6b5436fcdf3460405161108c919061117b565b60405180910390a2565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040154908060050160009054906101000a900460ff16905086565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611143826110ff565b915061114e836110ff565b925082820190508082111561116657611165611109565b5b92915050565b611175816110ff565b82525050565b6000602082019050611190600083018461116c565b92915050565b600080fd5b6111a4816110ff565b81146111af57600080fd5b50565b6000813590506111c18161119b565b92915050565b6000602082840312156111dd576111dc611196565b5b60006111eb848285016111b2565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061121f826111f4565b9050919050565b61122f81611214565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061127557611274611235565b5b50565b600081905061128682611264565b919050565b600061129682611278565b9050919050565b6112a68161128b565b82525050565b600060c0820190506112c16000830189611226565b6112ce602083018861116c565b6112db604083018761116c565b6112e8606083018661116c565b6112f5608083018561116c565b61130260a083018461129d565b979650505050505050565b61131681611214565b811461132157600080fd5b50565b6000813590506113338161130d565b92915050565b600080604083850312156113505761134f611196565b5b600061135e858286016111b2565b925050602061136f85828601611324565b9150509250929050565b600060208201905061138e6000830184611226565b92915050565b600080600080608085870312156113ae576113ad611196565b5b60006113bc878288016111b2565b94505060206113cd878288016111b2565b93505060406113de878288016111b2565b92505060606113ef878288016111b2565b91505092959194509250565b600082825260208201905092915050565b7f4c656e64696e67506f6f6c3a204f6e6c79206f776e6572000000000000000000600082015250565b60006114426017836113fb565b915061144d8261140c565b602082019050919050565b6000602082019050818103600083015261147181611435565b9050919050565b7f4c656e64696e67506f6f6c3a20696e73756666696369656e7420617661696c6160008201527f626c65206c697175696469747900000000000000000000000000000000000000602082015250565b60006114d4602d836113fb565b91506114df82611478565b604082019050919050565b60006020820190508181036000830152611503816114c7565b9050919050565b6000611515826110ff565b9150611520836110ff565b925082820390508181111561153857611537611109565b5b92915050565b600081905092915050565b50565b600061155960008361153e565b915061156482611549565b600082019050919050565b600061157a8261154c565b9150819050919050565b7f4c656e64696e67506f6f6c3a207769746864726177206661696c656400000000600082015250565b60006115ba601c836113fb565b91506115c582611584565b602082019050919050565b600060208201905081810360008301526115e9816115ad565b9050919050565b7f4c656e64696e67506f6f6c3a206c6f616e206e6f742061637469766500000000600082015250565b6000611626601c836113fb565b9150611631826115f0565b602082019050919050565b6000602082019050818103600083015261165581611619565b9050919050565b7f4c656e64696e67506f6f6c3a206c6f616e206e6f742064756500000000000000600082015250565b60006116926019836113fb565b915061169d8261165c565b602082019050919050565b600060208201905081810360008301526116c181611685565b9050919050565b60006060820190506116dd6000830186611226565b6116ea6020830185611226565b6116f7604083018461116c565b949350505050565b7f4c656e64696e67506f6f6c3a206c6f616e2065786973747320666f7220746f6b60008201527f656e496400000000000000000000000000000000000000000000000000000000602082015250565b600061175b6024836113fb565b9150611766826116ff565b604082019050919050565b6000602082019050818103600083015261178a8161174e565b9050919050565b7f4c656e64696e67506f6f6c3a207072696e636970616c203e2030000000000000600082015250565b60006117c7601a836113fb565b91506117d282611791565b602082019050919050565b600060208201905081810360008301526117f6816117ba565b9050919050565b7f4c656e64696e67506f6f6c3a20696e76616c6964206475726174696f6e000000600082015250565b6000611833601d836113fb565b915061183e826117fd565b602082019050919050565b6000602082019050818103600083015261186281611826565b9050919050565b7f4c656e64696e67506f6f6c3a20696e73756666696369656e74206c697175696460008201527f6974790000000000000000000000000000000000000000000000000000000000602082015250565b60006118c56023836113fb565b91506118d082611869565b604082019050919050565b600060208201905081810360008301526118f4816118b8565b9050919050565b7f4c656e64696e67506f6f6c3a206661696c656420746f2073656e64207072696e60008201527f636970616c20746f20626f72726f776572000000000000000000000000000000602082015250565b60006119576031836113fb565b9150611962826118fb565b604082019050919050565b600060208201905081810360008301526119868161194a565b9050919050565b60006060820190506119a2600083018661116c565b6119af602083018561116c565b6119bc604083018461116c565b949350505050565b7f4c656e64696e67506f6f6c3a206f6e6c7920626f72726f7765722063616e207260008201527f6570617900000000000000000000000000000000000000000000000000000000602082015250565b6000611a206024836113fb565b9150611a2b826119c4565b604082019050919050565b60006020820190508181036000830152611a4f81611a13565b9050919050565b7f4c656e64696e67506f6f6c3a20696e636f727265637420726570617920616d6f60008201527f756e740000000000000000000000000000000000000000000000000000000000602082015250565b6000611ab26023836113fb565b9150611abd82611a56565b604082019050919050565b60006020820190508181036000830152611ae181611aa5565b9050919050565b7f4c656e64696e67506f6f6c3a206465706f736974203e20300000000000000000600082015250565b6000611b1e6018836113fb565b9150611b2982611ae8565b602082019050919050565b60006020820190508181036000830152611b4d81611b11565b905091905056fea26469706673582212209ddc7c29ee2e4d62b257251e1e713aab0f904725345cfcd9eac46b788191785864736f6c63430008180033";

type LendingPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LendingPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LendingPool__factory extends ContractFactory {
  constructor(...args: LendingPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _assetTokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_assetTokenAddress, overrides || {});
  }
  override deploy(
    _assetTokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_assetTokenAddress, overrides || {}) as Promise<
      LendingPool & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LendingPool__factory {
    return super.connect(runner) as LendingPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LendingPoolInterface {
    return new Interface(_abi) as LendingPoolInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LendingPool {
    return new Contract(address, _abi, runner) as unknown as LendingPool;
  }
}
