/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  LendingPool,
  LendingPoolInterface,
} from "../../contracts/LendingPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loanId",
        type: "uint256",
      },
    ],
    name: "liquidateLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "loanCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "loans",
    outputs: [
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "repaid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loanId",
        type: "uint256",
      },
    ],
    name: "repayLoan",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "requestLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610391806100206000396000f3fe60806040526004361061004a5760003560e01c806334d9289e1461004f578063753c7ff91461007a578063ab7b1c89146100a3578063ccdd9f5d146100bf578063e1ec3c68146100e8575b600080fd5b34801561005b57600080fd5b5061006461012a565b60405161007191906101be565b60405180910390f35b34801561008657600080fd5b506100a1600480360381019061009c919061020a565b610130565b005b6100bd60048036038101906100b89190610271565b610136565b005b3480156100cb57600080fd5b506100e660048036038101906100e19190610271565b610139565b005b3480156100f457600080fd5b5061010f600480360381019061010a9190610271565b61013c565b604051610121969594939291906102fa565b60405180910390f35b60015481565b50505050565b50565b50565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040154908060050160009054906101000a900460ff16905086565b6000819050919050565b6101b8816101a5565b82525050565b60006020820190506101d360008301846101af565b92915050565b600080fd5b6101e7816101a5565b81146101f257600080fd5b50565b600081359050610204816101de565b92915050565b60008060008060808587031215610224576102236101d9565b5b6000610232878288016101f5565b9450506020610243878288016101f5565b9350506040610254878288016101f5565b9250506060610265878288016101f5565b91505092959194509250565b600060208284031215610287576102866101d9565b5b6000610295848285016101f5565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102c98261029e565b9050919050565b6102d9816102be565b82525050565b60008115159050919050565b6102f4816102df565b82525050565b600060c08201905061030f60008301896102d0565b61031c60208301886101af565b61032960408301876101af565b61033660608301866101af565b61034360808301856101af565b61035060a08301846102eb565b97965050505050505056fea2646970667358221220bc9034b3f1bf06bf9c96807e9f6f7b2d5cac9d85adafcabdea4cf2d6fb8b8f7d64736f6c63430008180033";

type LendingPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LendingPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LendingPool__factory extends ContractFactory {
  constructor(...args: LendingPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LendingPool & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LendingPool__factory {
    return super.connect(runner) as LendingPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LendingPoolInterface {
    return new Interface(_abi) as LendingPoolInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LendingPool {
    return new Contract(address, _abi, runner) as unknown as LendingPool;
  }
}
